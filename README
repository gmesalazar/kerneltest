README
======

This project ports Lua's test suite to the NetBSD kernel; that is, it
tests kernel Lua [1, 2].

HOW TO RUN
==========

1. In order to run the tests, you must apply the following patches (which can 
be found under 'kernel/patches') against your NetBSD-current tree

   - 'lua-lauxlib.patch' - enables a few declarations not available by default
      in Kernel Lua
   - 'lua-parser.patch'  - fixes a bug in the Kernel Lua parser
   - 'openlibs.patch'    - adds a command ('openlibs') to luactl(8) in order
      to allow the loading of standard libraries into a Lua state

2. Compile and install the kernel modules available in 'kernel/modules'

   - luabase
   - luaio
   - luamath
   - luaos

3. The script 'kernel/open-state.sh' allows you to load the modules installed
in step (2) and to create a Lua state

   $ ./kernel/open-state stateName

4. Load the preload script from 'kernel/preload.lua'

   $ luactl load stateName ./kernel/preload.lua

5. Finally, load 'all.lua'. This will load and execute the tests in kernel Lua

   $ luactl load stateName ./all.lua

6. Use dmesg(8) to see the output

* Internal tests

  - To run internal tests, copy the files in ltests to Lua distribution in
  the NetBSD source tree (i.e., external/mit/lua/dist/src), recompile and
  install kernel Lua

  - Recompile and install the modules as in step (2), but this time using
    the 'tests' target (i.e., 'make tests' & make install for each module)
  
  - NOTICE: A kernel panic occurs when Lua is compiled with the internal tests
    enabled


======

[1] https://www.phoronix.com/scan.php?page=news_item&px=MTMwMTU
[2] https://www.phoronix.com/scan.php?page=news_item&px=MTQ4ODk
