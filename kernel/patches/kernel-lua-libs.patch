Index: external/mit/lua/dist/src/lauxlib.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/lauxlib.c,v
retrieving revision 1.6
diff -r1.6 lauxlib.c
231d230
< #ifndef _KERNEL
248d246
< #endif /* _KERNEL */
633d630
< #ifndef _KERNEL
653a651,653
> #ifdef _KERNEL
> 	if (*size == 0) return NULL;
> #endif
667d666
< 
708a708
> #ifndef _KERNEL
710a711
> #endif
718a720
> #ifndef _KERNEL
723a726
> #endif
728a732
> #ifndef _KERNEL
732a737
> #endif
736d740
< #endif /* _KERNEL */
Index: external/mit/lua/dist/src/lauxlib.h
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/lauxlib.h,v
retrieving revision 1.4
diff -r1.4 lauxlib.h
74d73
< #ifndef _KERNEL
75a75
> #ifndef _KERNEL
86d85
< #ifndef _KERNEL
91d89
< #endif /* _KERNEL */
185d182
< #ifndef _KERNEL
207d203
< #endif /* _KERNEL */
Index: external/mit/lua/dist/src/lbaselib.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/lbaselib.c,v
retrieving revision 1.6
diff -r1.6 lbaselib.c
292d291
< #ifndef _KERNEL
300d298
< #endif /* _KERNEL */
363d360
< #ifndef _KERNEL
378d374
< #endif /* _KERNEL */
465d460
< #ifndef _KERNEL
467d461
< #endif /* _KERNEL */
471d464
< #ifndef _KERNEL
473d465
< #endif /* _KERNEL */
494a487,489
> #ifdef _KERNEL
>   {"_KERNEL", NULL},
> #endif
508a504,507
> #ifdef _KERNEL
>   lua_pushboolean(L, true);
>   lua_setfield(L, -2, "_KERNEL");
> #endif
Index: external/mit/lua/dist/src/linit.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/linit.c,v
retrieving revision 1.5
diff -r1.5 linit.c
53d52
< #ifndef _KERNEL
56d54
< #endif /* _KERNEL */
58d55
< #ifndef _KERNEL
60d56
< #endif /* _KERNEL */
Index: external/mit/lua/dist/src/liolib.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/liolib.c,v
retrieving revision 1.5
diff -r1.5 liolib.c
14c14
< 
---
> #ifndef _KERNEL
20a21,24
> #else
> #include <iolib.h>
> #define l_getc(fp) getc(fp)
> #endif
48a53
> #ifndef _KERNEL
134a140
> #endif
150a157
> #ifndef _KERNEL
162a170
> #endif
243d250
< 
262a270
> #ifndef _KERNEL
286a295
> #endif
325c334
< 
---
> #ifndef _KERNEL
371d379
< 
472a481
> #endif
481a491
> #ifndef _KERNEL
482a493
> #endif
484a496
> #ifndef _KERNEL
485a498
> #endif
525a539
> #ifndef _KERNEL
526a541
> #endif
536a552
> #ifndef _KERNEL
537a554,556
> #else
>         success = (l == 0) ? 1 : read_chars(L, f, l);
> #endif
542a562
> #ifndef _KERNEL
545a566
> #endif
581c602
< 
---
> #ifndef _KERNEL
608a630
> #endif
616a639
> #ifndef _KERNEL
624a648
> #endif
627a652
> #ifndef _KERNEL
628a654
> #endif
646a673
> #ifndef _KERNEL
685a713
> #endif
692a721
> #ifndef _KERNEL
693a723
> #endif
694a725
> #ifndef _KERNEL
695a727
> #endif
697a730
> #ifndef _KERNEL
698a732
> #endif
699a734
> #ifndef _KERNEL
701a737
> #endif
711a748
> #ifndef _KERNEL
713a751
> #endif
714a753
> #ifndef _KERNEL
716a756
> #endif
744c784
< 
---
> #ifndef _KERNEL
748a789
>   p->f = f->f;
755a797
> #endif
760a803
> #ifndef _KERNEL
764a808
> #endif
Index: external/mit/lua/dist/src/lmathlib.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/lmathlib.c,v
retrieving revision 1.5
diff -r1.5 lmathlib.c
14c14
< 
---
> #ifndef _KERNEL
16a17
> #endif
23c24
< 
---
> #ifndef _KERNEL
39a41,49
> #else // _KERNEL
> #define HUGE_VAL (lua_Number)__builtin_huge_val()
> #define l_rand()   random()
> #ifndef srandom
> #define srandom(x) ;
> #endif
> #define l_srand(x) srandom(x)
> #endif
> 
40a51
> #ifndef _KERNEL
127c138
< 
---
> #endif
138a150
> #ifndef _KERNEL
141a154
> #endif
145a159
> #ifndef _KERNEL
211a226
> #endif
247a263
> #ifndef _KERNEL
248a265,267
> #else
>   long r = l_rand();
> #endif
269a289
> #ifndef _KERNEL
270a291,293
> #else
>   r = r + (up - low);
> #endif
297a321
> #ifndef _KERNEL
348c372
< 
---
> #endif
351a376
> #ifndef _KERNEL
361a387
> #endif
362a389
> #ifndef _KERNEL
364a392
> #endif
366a395
> #ifndef _KERNEL
368a398
> #endif
370a401
> #ifndef _KERNEL
373a405
> #endif
374a407
> #ifndef _KERNEL
387a421
> #endif
398a433
> #ifndef _KERNEL
400a436
> #endif
Index: external/mit/lua/dist/src/loslib.c
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/loslib.c,v
retrieving revision 1.5
diff -r1.5 loslib.c
14c14
< 
---
> #ifndef _KERNEL
19a20,25
> #else
> #include <sys/time.h>
> #include <sys/proc.h>
> #include <iolib.h>
> #include <mkstemp.h>
> #endif
25a32,44
> #ifdef _KERNEL
> 
> #define LUA_TMPNAMTEMPLATE "/tmp/lua_XXXXXX"
> #define LUA_TMPNAMBUFSIZE 32
> 
> #define lua_tmpnam(b,e) { \
>    		strcpy(b, LUA_TMPNAMTEMPLATE); \
> 		e = mkstemp(b); \
> 		if (e != -1) kclose(e); \
> 		e = (e == -1); }
> 
> #define remove(fname) kremove(fname)
> #endif
92c111
< 
---
> #ifndef _KERNEL
142c161
< 
---
> #endif
149c168
< 
---
> #ifndef _KERNEL
155c174
< 
---
> #endif
167c186
< 
---
> #ifndef _KERNEL
172c191
< 
---
> #endif
174a194
> #ifndef _KERNEL
175a196,204
> #else
>   struct rusage ru;
>   long s;
> 
>   getrusage1(curlwp->l_proc, RUSAGE_SELF, &ru);
>   s = ru.ru_utime.tv_sec * 1000000 + ru.ru_stime.tv_sec * 1000000
>       + ru.ru_utime.tv_usec + ru.ru_stime.tv_usec;
>   lua_pushinteger(L, s);
> #endif
179c208
< 
---
> #ifndef _KERNEL
305a335
> #endif
309a340,342
> #ifdef _KERNEL
>   struct bintime bt;
> #endif
310a344
> #ifndef _KERNEL
311a346,352
> #else
> {
>     bintime(&bt);
>     t = bt.sec;
> }
> #endif
> #ifndef _KERNEL
324a366
> #endif
331c373
< 
---
> #ifndef _KERNEL
365c407
< 
---
> #endif
368a411
> #ifndef _KERNEL
373a417
> #endif
374a419
> #ifndef _KERNEL
376a422
> #endif
Index: external/mit/lua/dist/src/luaconf.h
===================================================================
RCS file: /cvsroot/src/external/mit/lua/dist/src/luaconf.h,v
retrieving revision 1.16
diff -r1.16 luaconf.h
824a825,843
> #define BUFSIZ  1024
> #define EOF     -1
> #define errno   -1
> #define strerror(errno) "kernel lua: error"
> 
> #define FILE KFILE
> 
> #include <iolib.h>
> 
> #define fopen(path, mode)	kfopen(path, mode)
> #define fclose(fp)			kfclose(fp)
> 
> #define feof(fp)	0
> #define ferror(fp)	0
> #define fread(buff, sz, nb, fp)		kfread(buff, sz * nb, fp)
> #define fwrite(buff, sz, nb, fp)	kfwrite(buff, sz * nb, fp)
> 
> #define getc(fp)	kfgetc(fp)
> 
